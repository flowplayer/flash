<project name="Common build file used by JS plugins" default="min">

	<!-- additional tasks -->
	<taskdef resource="net/sf/antcontrib/antlib.xml"/>

	<property name="shortname" value="${ant.project.name}"/>

    <condition property="basename" value="${shortname}" else="flowplayer.${shortname}">
        <equals arg1="${shortname}" arg2="flowplayer"/>
    </condition>

    <property name="devkit-dir" value="../../../../lib/devkit" />
	<property name="source.file" value="${basedir}/${basename}.js"/>
	<property name="rhino" value="${DEVKIT_HOME}/lib/rhino.jar"/>
	<property name="yui.path" value="${DEVKIT_HOME}/lib/yuicompressor-2.4.2.jar"/>
	<property file="//Users/api/code/setup/etc/version.properties" prefix="v"/>
    <property file="../release/build.properties" />


    <!-- target dir is dynamic -->
	<var name="target.dir" value="${basedir}"/>

	<if>
		<contains string="${basedir}" substring="/tools/"/>
		<then>
			<var name="target.dir" value="${target.dir}/tools"/>
		</then>
	</if>

	<!-- lint (http://www.jslint.com/lint.html)  -->
   <target name="lint">
		<java jar="${rhino}" fork="true">
			<arg value="${DEVKIT_HOME}/lib/jslint.js" />
			<arg value="${basename}.js" />
		</java>
	</target>


	<!-- copy source file & update tokens -->
	<target name="source">

		<property name="target.file" value="${target.dir}/${basename}-${version}.js"/>
		<copy file="${source.file}" tofile="${target.file}" overwrite="true"/>
		<echo message="${source.file} --> ${target.file} copied" />

		<exec executable="svn" outputproperty="svnlog.out" >
		<arg line="info ."/>
		</exec>

		<propertyregex property="revision" input="${svnlog.out}" select="\1">
			<regexp pattern="Revision: ([0-9]*)"/>
		</propertyregex>

		<propertyregex property="date" input="${svnlog.out}" select="\1">
			<regexp pattern="Date: (.+\))"/>
		</propertyregex>

		<replaceregexp match="@VERSION" replace="${version}" flags="g" byline="true"
			file="${target.file}" />

		<replaceregexp match="@DATE" replace="${date}" file="${target.file}" />
      <replaceregexp match="@REVISION" replace="${revision}" file="${target.file}" />
		<echo message="${target.file} build" />

	</target>


	<!-- yuicompress: http://www.julienlecomte.net/blog/2007/09/16/ -->
	<target name="min" depends="source">

        <!--<property name="target.file" value="${target.dir}/${basename}-${version}.min.js"/>-->
        <!--<property name="minified.file" value="${target.dir}/${basename}-tmp.min.js"/>-->

        <apply executable="/usr/bin/java" parallel="false">
			<fileset file="${target.file}"/>
            <arg line="-jar"/>
            <arg path="${yui.path}"/>
            <srcfile/>
            <arg line="-o"/>
            <mapper type="glob" from="*.js" to="${target.dir}/*.min.js"/>
            <targetfile/>
        </apply>

        <replaceregexp match="/\*!" replace="/\*\*" file="${target.file}" />
		<echo message="${target.file} minified"/>

	</target>

	<!-- for releases.yaml file generation -->
    <target name="write-version">
        <echo message="writing ${basename}: ${version} to ${yaml-file}" />
        <echo file="${yaml-file}" append="true" message="        ${shortname}: ${version}${line.separator}" />
    </target>

    <target name="write-filesize">
        <length property="filesize" file="${target.dir}/${basename}-${version}.js" />
        <echo file="${yaml-file}" append="true" message="        ${basename}.js: ${filesize}${line.separator}" />
    </target>

    <target name="deploy" if="js.deploy.dir">
        <property name="target.file" value="${target.dir}/${basename}-${version}.min.js"/>
        <echo message="copying ${target.file}" />
        <copy file="${target.file}" todir="${js.deploy.dir}" />
        <copy file="${target.dir}/${basename}.js" todir="${js.deploy.dir}" />
    </target>

    <target name="release-remote">
        <echo message="release-remote: releasing to js" />

        <remotecopy bucketname="flowplayer-releases/js" keyfile="${keyfile}" pass="${pass}">
            <releasefiles>
                <fileset dir=".">
                    <include name="${basename}-${version}.js" />
                    <include name="${basename}-${version}.min.js" />
                </fileset>
            </releasefiles>
        </remotecopy>

        <echo message="release-remote: uploading to ${basename}" />
        <remotecopy bucketname="flowplayer-releases/${basename}" keyfile="${keyfile}" pass="${pass}">
            <releasefiles>
                <fileset dir=".">
                    <include name="${basename}-${version}.js" />
                    <include name="${basename}-${version}.min.js" />
                </fileset>
            </releasefiles>
        </remotecopy>
    </target>

    <path id="classpath-release">
        <fileset dir="${devkit-dir}/releasejars">
            <include name="*.jar"/>
        </fileset>
    </path>

    <taskdef name="S3Upload" classname="dak.ant.taskdefs.S3Upload">
        <classpath refid="classpath-release"/>
    </taskdef>

    <macrodef name="remotecopy">
        <attribute name="bucketname" default="flowplayer-releases" />
        <attribute name="keyfile" />
        <attribute name="pass" />
        <element name="releasefiles" />

        <sequential>
            <echo message="bucketname @{bucketname}" />

            <S3Upload verbose="true"
                      accessId="${aws-accessId}"
                      secretKey="${aws-secretKey}"
                      bucket="@{bucketname}"
                      publicRead="true">
                <releasefiles />
            </S3Upload>
        </sequential>
    </macrodef>

</project>
